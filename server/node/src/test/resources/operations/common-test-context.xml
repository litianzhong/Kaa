<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2014-2016 CyberVision, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <context:component-scan base-package="org.kaaproject.kaa.server.operations" />

    <import resource="classpath:mongo-dao-test-context.xml" />

    <util:properties id="properties"
        location="classpath:/operations/operations-server-test.properties" />

    <!-- Node configuration from properties file -->

    <bean id="kaaNodeServerConfig" class="org.kaaproject.kaa.server.node.service.config.KaaNodeServerConfig">
        <property name="thriftHost" value="#{properties[thrift_host]}" />
        <property name="thriftPort" value="#{properties[thrift_port]}" />
        <property name="zkEnabled" value="#{properties[zk_enabled]}" />
        <property name="zkHostPortList" value="#{properties[zk_host_port_list]}" />
        <property name="zkMaxRetryTime" value="#{properties[zk_max_retry_time]}" />
        <property name="zkSleepTime" value="#{properties[zk_sleep_time]}" />
        <property name="zkIgnoreErrors" value="#{properties[zk_ignore_errors]}" />
    </bean>

    <!-- Operations Service -->

    <bean id="operationsInitializationService" class="org.kaaproject.kaa.server.operations.service.initialization.OperationsInitializationService" />
    <bean id="operationsService"
        class="org.kaaproject.kaa.server.operations.service.DefaultOperationsService" />
    <bean id="deltaService"
        class="org.kaaproject.kaa.server.operations.service.delta.DefaultDeltaService" />
    <bean id="cacheService"
        class="org.kaaproject.kaa.server.operations.service.cache.concurrent.ConcurrentCacheService" />
    <bean id="profileService"
        class="org.kaaproject.kaa.server.operations.service.profile.DefaultProfileService" />
    <bean id="deltaCalculatorFactory"
        class="org.kaaproject.kaa.server.common.core.algorithms.delta.DefaultDeltaCalculatorFactory" />
    <bean id="operationsKeyStoreService"
        class="org.kaaproject.kaa.server.operations.service.security.OperationsFileKeyStoreService" />
    <bean id="endpointUserService"
        class="org.kaaproject.kaa.server.operations.service.user.DefaultEndpointUserService" />
    <bean id="logAppenderService"
        class="org.kaaproject.kaa.server.operations.service.logs.DefaultLogAppenderService" />
    <bean id="logAppenderResolver" class="org.kaaproject.kaa.server.operations.service.logs.DefaultLogAppenderBuilder" />
    <bean id="metricsService" class="org.kaaproject.kaa.server.operations.service.metrics.DefaultMerticsService" init-method="startReport" destroy-method="stopReport">
        <property name="enabled" value="#{properties[metrics_enabled]}"/>
    </bean>

    <!-- Configuration from properties file -->

    <bean id="operationsServerConfig" class="org.kaaproject.kaa.server.operations.service.config.OperationsServerConfig">
        <property name="userHashPartitions" value="#{properties[user_hash_partitions]}" />
        <property name="maxNumberNeighborConnections" value="#{properties[max_number_neighbor_connections]}" />
    </bean>

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="ehcache.xml" />

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache" />

    <bean id="configurationOverrideFactory" class="org.kaaproject.kaa.server.common.core.algorithms.override.DefaultOverrideAlgorithmFactory" />
</beans>